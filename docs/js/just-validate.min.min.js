"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _createForOfIteratorHelper(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var r=0,l=function(){};return{s:l,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return o=e.done,e},e:function(e){a=!0,s=e},f:function(){try{o||null==i.return||i.return()}finally{if(a)throw s}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}var _=Object.defineProperty,w=Object.getOwnPropertySymbols,X=Object.prototype.hasOwnProperty,Z=Object.prototype.propertyIsEnumerable,E=function(e,t,i){return t in e?_(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i},L=function(e,t){for(var i in t||(t={}))X.call(t,i)&&E(e,i,t[i]);if(w){var r,l=_createForOfIteratorHelper(w(t));try{for(l.s();!(r=l.n()).done;){i=r.value;Z.call(t,i)&&E(e,i,t[i])}}catch(e){l.e(e)}finally{l.f()}}return e},u=function(e,t,i){return E(e,"symbol"!=_typeof(t)?t+"":t,i),i};!function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).JustValidate=t()}(void 0,function(){var M,e,c,s,t,j=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,P=/^[0-9]+$/,_=/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/,O=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;(e=M||(M={})).Required="required",e.Email="email",e.MinLength="minLength",e.MaxLength="maxLength",e.Password="password",e.Number="number",e.MaxNumber="maxNumber",e.MinNumber="minNumber",e.StrongPassword="strongPassword",e.CustomRegexp="customRegexp",e.MinFilesCount="minFilesCount",e.MaxFilesCount="maxFilesCount",e.Files="files",(c||(c={})).Required="required",(t=s||(s={})).Label="label",t.LabelArrow="labelArrow";var q=function(e){return!!e&&"function"==typeof e.then},o={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1};return function(){function r(e,t,i){var s=this;_classCallCheck(this,r),u(this,"form",null),u(this,"fields",{}),u(this,"groupFields",{}),u(this,"errors",{}),u(this,"isValid",!1),u(this,"isSubmitted",!1),u(this,"globalConfig",o),u(this,"errorLabels",[]),u(this,"successLabels",[]),u(this,"eventListeners",[]),u(this,"dictLocale",[]),u(this,"currentLocale"),u(this,"customStyleTags",{}),u(this,"onSuccessCallback"),u(this,"onFailCallback"),u(this,"tooltips",[]),u(this,"lastScrollPosition"),u(this,"isScrollTick"),u(this,"refreshAllTooltips",function(){s.tooltips.forEach(function(e){e.refresh()})}),u(this,"handleDocumentScroll",function(){s.lastScrollPosition=window.scrollY,s.isScrollTick||(window.requestAnimationFrame(function(){s.refreshAllTooltips(),s.isScrollTick=!1}),s.isScrollTick=!0)}),u(this,"formSubmitHandler",function(i){i.preventDefault(),s.isSubmitted=!0,s.globalConfig.lockForm&&s.lockForm(),s.validate().finally(function(){var e,t;s.globalConfig.lockForm&&s.unlockForm(),s.isValid?null==(e=s.onSuccessCallback)||e.call(s,i):null==(t=s.onFailCallback)||t.call(s,s.fields)})}),u(this,"handleFieldChange",function(e){var t,i;for(var r in s.fields){var l=s.fields[r];if(l.elem===e){t=l,i=r;break}}!t||!i||s.validateField(i,t,!0)}),u(this,"handleGroupChange",function(t){var e,i;for(var r in s.groupFields){var l=s.groupFields[r];if(l.elems.find(function(e){return e===t})){e=l,i=r;break}}!e||!i||s.validateGroup(i,e)}),u(this,"handlerChange",function(e){!e.target||(s.handleFieldChange(e.target),s.handleGroupChange(e.target),s.renderErrors())}),this.initialize(e,t,i)}return _createClass(r,[{key:"initialize",value:function(e,t,i){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=o,this.errorLabels=[],this.eventListeners=[],this.customStyleTags={},this.tooltips=[],"string"==typeof e){var r=document.querySelector(e);if(!r)throw Error("Form with ".concat(e," selector not found! Please check the form selector"));this.setForm(r)}else{if(!(e instanceof HTMLFormElement))throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");this.setForm(e)}if(this.globalConfig=L(L({},o),t),i&&(this.dictLocale=i),this.isTooltip()){var l=document.createElement("style");l.textContent=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",this.customStyleTags[s.Label]=document.head.appendChild(l),this.addListener("scroll",document,this.handleDocumentScroll)}}},{key:"getLocalisedString",value:function(t){var e;return this.currentLocale&&this.dictLocale.length&&(null==(e=this.dictLocale.find(function(e){return e.key===t}))?void 0:e.dict[this.currentLocale])||t}},{key:"getFieldErrorMessage",value:function(e,t){var i="function"==typeof e.errorMessage?e.errorMessage(this.getElemValue(t),this.fields):e.errorMessage;return this.getLocalisedString(i)||function(e,t){switch(e){case M.Required:return"The field is required";case M.Email:return"Email has invalid format";case M.MaxLength:return"The field must contain a maximum of :value characters".replace(":value",String(t));case M.MinLength:return"The field must contain a minimum of :value characters".replace(":value",String(t));case M.Password:return"Password must contain minimum eight characters, at least one letter and one number";case M.Number:return"Value should be a number";case M.StrongPassword:return"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character";case M.MaxNumber:return"Number should be less or equal than :value".replace(":value",String(t));case M.MinNumber:return"Number should be more or equal than :value".replace(":value",String(t));case M.MinFilesCount:return"Files count should be more or equal than :value".replace(":value",String(t));case M.MaxFilesCount:return"Files count should be less or equal than :value".replace(":value",String(t));case M.Files:return"Uploaded files have one or several invalid properties (extension/size/type etc)";default:return"Value is incorrect"}}(e.rule,e.value)}},{key:"getFieldSuccessMessage",value:function(e,t){var i="function"==typeof e?e(this.getElemValue(t),this.fields):e;return this.getLocalisedString(i)}},{key:"getGroupErrorMessage",value:function(e){return this.getLocalisedString(e.errorMessage)||function(e){switch(e){case c.Required:return"The field is required";default:return"Group is incorrect"}}(e.rule)}},{key:"getGroupSuccessMessage",value:function(e){return this.getLocalisedString(e.successMessage)}},{key:"setFieldInvalid",value:function(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t,this.fields[e].elem)}},{key:"setFieldValid",value:function(e,t){this.fields[e].isValid=!0,void 0!==t&&(this.fields[e].successMessage=this.getFieldSuccessMessage(t,this.fields[e].elem))}},{key:"setGroupInvalid",value:function(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}},{key:"setGroupValid",value:function(e,t){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(t)}},{key:"getElemValue",value:function(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}},{key:"validateGroupRule",value:function(e,t,i,r){switch(r.rule){case c.Required:("radio"===t||"checkbox"===t)&&(i.every(function(e){return!e.checked})?this.setGroupInvalid(e,r):this.setGroupValid(e,r))}}},{key:"validateFieldRule",value:function(t,e,i){var r,l,s,o,a,n,u,c,d,f,h,v,b,p,y,g=this,m=3<arguments.length&&void 0!==arguments[3]&&arguments[3],F=i.value,k=this.getElemValue(e);if(i.plugin)i.plugin(k,this.fields)||this.setFieldInvalid(t,i);else switch(i.rule){case M.Required:"string"==typeof(y=p=k)&&(y=p.trim()),!y&&this.setFieldInvalid(t,i);break;case M.Email:if("string"!=typeof k){this.setFieldInvalid(t,i);break}b=k,j.test(b)||this.setFieldInvalid(t,i);break;case M.MaxLength:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;v=F,k.length>v&&this.setFieldInvalid(t,i);break;case M.MinLength:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;h=F,k.length<h&&this.setFieldInvalid(t,i);break;case M.Password:if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;f=k,_.test(f)||this.setFieldInvalid(t,i);break;case M.StrongPassword:if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;d=k,O.test(d)||this.setFieldInvalid(t,i);break;case M.Number:if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;c=k,P.test(c)||this.setFieldInvalid(t,i);break;case M.MaxNumber:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;var C=+k;(Number.isNaN(C)||F<C)&&this.setFieldInvalid(t,i);break;case M.MinNumber:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if("string"!=typeof k){this.setFieldInvalid(t,i);break}if(""===k)break;var w=+k;(Number.isNaN(w)||w<F)&&this.setFieldInvalid(t,i);break;case M.CustomRegexp:if(void 0===F)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,i);var S;try{S=new RegExp(F)}catch(e){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a valid regexp. This field will be always invalid.")),this.setFieldInvalid(t,i);break}var L=String(k);""!==L&&!S.test(L)&&this.setFieldInvalid(t,i);break;case M.MinFilesCount:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if(Number.isFinite(null==k?void 0:k.length)&&k.length<F){this.setFieldInvalid(t,i);break}break;case M.MaxFilesCount:if(void 0===F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),this.setFieldInvalid(t,i);break}if("number"!=typeof F){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(t,i);break}if(Number.isFinite(null==k?void 0:k.length)&&k.length>F){this.setFieldInvalid(t,i);break}break;case M.Files:if(void 0===F)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,i);if("object"!=_typeof(F))return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be an object. This field will be always invalid.")),void this.setFieldInvalid(t,i);var E=F.files;if("object"!=_typeof(E))return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be an object with files array. This field will be always invalid.")),void this.setFieldInvalid(t,i);if("object"==_typeof(k)&&null!==k)for(var I=0,x=k.length;I<x;++I){var T=k.item(I);if(!T){this.setFieldInvalid(t,i);break}if(r=T,l=E,void 0,s=Number.isFinite(l.minSize)&&r.size<l.minSize,o=Number.isFinite(l.maxSize)&&r.size>l.maxSize,a=Array.isArray(l.names)&&!l.names.includes(r.name),n=Array.isArray(l.extensions)&&!l.extensions.includes(r.name.split(".")[r.name.split(".").length-1]),u=Array.isArray(l.types)&&!l.types.includes(r.type),s||o||a||n||u){this.setFieldInvalid(t,i);break}}break;default:if("function"!=typeof i.validator)return console.error("Validator for custom rule for [".concat(t,"] field should be a function. This field will be always invalid.")),void this.setFieldInvalid(t,i);var A=i.validator(k,this.fields);if("boolean"!=typeof A&&"function"!=typeof A&&console.error("Validator return value for [".concat(t,"] field should be boolean or function. It will be cast to boolean.")),"function"==typeof A){if(!m){this.fields[t].asyncCheckPending=!1;var V=A();return q(V)?V.then(function(e){e||g.setFieldInvalid(t,i)}).catch(function(){g.setFieldInvalid(t,i)}):(console.error("Validator function for custom rule for [".concat(t,"] field should return a Promise. This field will be always invalid.")),void this.setFieldInvalid(t,i))}this.fields[t].asyncCheckPending=!0}A||this.setFieldInvalid(t,i)}}},{key:"validateField",value:function(i,r){var e,l=this,s=2<arguments.length&&void 0!==arguments[2]&&arguments[2];r.isValid=!0;var o=[];return _toConsumableArray(r.rules).reverse().forEach(function(e){var t=l.validateFieldRule(i,r.elem,e,s);q(t)&&o.push(t)}),r.isValid&&this.setFieldValid(i,null==(e=r.config)?void 0:e.successMessage),Promise.allSettled(o)}},{key:"validateGroup",value:function(i,r){var l=this,s=[];return _toConsumableArray(r.rules).reverse().forEach(function(e){var t=l.validateGroupRule(i,r.type,r.elems,e);q(t)&&s.push(t)}),Promise.allSettled(s)}},{key:"focusInvalidField",value:function(){var i=this,e=function(e){var t=i.fields[e];if(!t.isValid)return setTimeout(function(){return t.elem.focus()},0),"break"};for(var t in this.fields){if("break"===e(t))break}}},{key:"afterSubmitValidation",value:function(){this.renderErrors(),this.globalConfig.focusInvalidField&&this.focusInvalidField()}},{key:"validate",value:function(){var l=this;return new Promise(function(e){var r=[];Object.keys(l.fields).forEach(function(e){var t=l.fields[e],i=l.validateField(e,t);q(i)&&r.push(i)}),Object.keys(l.groupFields).forEach(function(e){var t=l.groupFields[e],i=l.validateGroup(e,t);q(i)&&r.push(i)}),r.length?Promise.allSettled(r).then(function(){l.afterSubmitValidation(),e(!0)}):(l.afterSubmitValidation(),e(!1))})}},{key:"setForm",value:function(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}},{key:"addListener",value:function(e,t,i){t.addEventListener(e,i),this.eventListeners.push({type:e,elem:t,func:i})}},{key:"removeListener",value:function(t,i,e){i.removeEventListener(t,e),this.eventListeners=this.eventListeners.filter(function(e){return e.type!==t||e.elem!==i})}},{key:"addField",value:function(t,e,i){if("string"!=typeof t)throw Error("Field selector is not valid. Please specify a string selector.");var r=document.querySelector(t);if(!r)throw Error("Field with ".concat(t," selector not found! Please check the field selector."));if(!Array.isArray(e)||!e.length)throw Error("Rules argument for the field [".concat(t,"] should be an array and should contain at least 1 element."));return e.forEach(function(e){if(!("rule"in e||"validator"in e||"plugin"in e))throw Error("Rules argument for the field [".concat(t,"] must contain at least one rule or validator property."));if(!(e.validator||e.plugin||e.rule&&Object.values(M).includes(e.rule)))throw Error("Rule should be one of these types: ".concat(Object.values(M).join(", "),". Provided value: ").concat(e.rule))}),this.fields[t]={elem:r,rules:e,isValid:void 0,config:i},this.setListeners(r),this.isSubmitted&&this.validate(),this}},{key:"removeField",value:function(e){if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");if(!this.fields[e])return console.error("Field not found. Check the field selector."),this;var t=this.getListenerType(this.fields[e].elem.type);return this.removeListener(t,this.fields[e].elem,this.handlerChange),this.clearErrors(),delete this.fields[e],this}},{key:"removeGroup",value:function(e){var i=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");return this.groupFields[e]?(this.groupFields[e].elems.forEach(function(e){var t=i.getListenerType(e.type);i.removeListener(t,e,i.handlerChange)}),this.clearErrors(),delete this.groupFields[e]):console.error("Group not found. Check the group selector."),this}},{key:"addRequiredGroup",value:function(e,t,i,r){var l=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");var s=document.querySelector(e);if(!s)throw Error("Group with ".concat(e," selector not found! Please check the group selector."));var o=s.querySelectorAll("input"),a=Array.from(o).every(function(e){return"radio"===e.type}),n=Array.from(o).every(function(e){return"checkbox"===e.type});if(!a&&!n)throw Error("Group should contain either or checkboxes or radio buttons");return this.groupFields[e]={rules:[{rule:c.Required,errorMessage:t,successMessage:r}],groupElem:s,elems:Array.from(o),type:a?"radio":"checkbox",isDirty:!1,isValid:void 0,config:i},o.forEach(function(e){l.setListeners(e)}),this}},{key:"getListenerType",value:function(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";case"date":return"input";default:return"keyup"}}},{key:"setListeners",value:function(e){var t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}},{key:"clearErrors",value:function(){var l,s,o,a,n,u,c=this;this.errorLabels.forEach(function(e){return e.remove()}),this.successLabels.forEach(function(e){return e.remove()});var e=function(e){var t=c.fields[e],i=(null==(l=t.config)?void 0:l.errorFieldStyle)||c.globalConfig.errorFieldStyle;Object.keys(i).forEach(function(e){t.elem.style[e]=""});var r=(null==(s=t.config)?void 0:s.successFieldStyle)||c.globalConfig.successFieldStyle||{};Object.keys(r).forEach(function(e){t.elem.style[e]=""}),t.elem.classList.remove((null==(o=t.config)?void 0:o.errorFieldCssClass)||c.globalConfig.errorFieldCssClass,(null==(a=t.config)?void 0:a.successFieldCssClass)||c.globalConfig.successFieldCssClass)};for(var t in this.fields)e(t);var i=function(e){var r=c.groupFields[e],t=(null==(n=r.config)?void 0:n.errorFieldStyle)||c.globalConfig.errorFieldStyle;Object.keys(t).forEach(function(i){r.elems.forEach(function(e){var t;e.style[i]="",e.classList.remove((null==(t=r.config)?void 0:t.errorFieldCssClass)||c.globalConfig.errorFieldCssClass)})});var i=(null==(u=r.config)?void 0:u.successFieldStyle)||c.globalConfig.successFieldStyle||{};Object.keys(i).forEach(function(i){r.elems.forEach(function(e){var t;e.style[i]="",e.classList.remove((null==(t=r.config)?void 0:t.successFieldCssClass)||c.globalConfig.successFieldCssClass)})})};for(var r in this.groupFields)i(r);this.tooltips=[]}},{key:"isTooltip",value:function(){return!!this.globalConfig.tooltip}},{key:"lockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}},{key:"unlockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}},{key:"renderTooltip",value:function(e,t,i){var r,l=this,s=e.getBoundingClientRect(),o=s.top,a=s.left,n=s.width,u=s.height,c=t.getBoundingClientRect(),d=i||(null==(r=this.globalConfig.tooltip)?void 0:r.position);switch(d){case"left":t.style.top="".concat(o+u/2-c.height/2,"px"),t.style.left="".concat(a-c.width-5,"px");break;case"top":t.style.top="".concat(o-c.height-5,"px"),t.style.left="".concat(a+n/2-c.width/2,"px");break;case"right":t.style.top="".concat(o+u/2-c.height/2,"px"),t.style.left="".concat(a+n+5,"px");break;case"bottom":t.style.top="".concat(o+u+5,"px"),t.style.left="".concat(a+n/2-c.width/2,"px")}return t.dataset.direction=d,{refresh:function(){l.renderTooltip(e,t,i)}}}},{key:"createErrorLabelElem",value:function(e,t,i){var r=document.createElement("div");r.innerHTML=t;var l=this.isTooltip()?null==i?void 0:i.errorLabelStyle:(null==i?void 0:i.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(r.style,l),r.classList.add((null==i?void 0:i.errorLabelCssClass)||this.globalConfig.errorLabelCssClass,"just-validate-error-label"),this.isTooltip()&&(r.dataset.tooltip="true"),this.globalConfig.testingMode&&(r.dataset.testId="error-label-".concat(e)),this.errorLabels.push(r),r}},{key:"createSuccessLabelElem",value:function(e,t,i){if(void 0===t)return null;var r=document.createElement("div");r.innerHTML=t;var l=(null==i?void 0:i.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(r.style,l),r.classList.add((null==i?void 0:i.successLabelCssClass)||this.globalConfig.successLabelCssClass,"just-validate-success-label"),this.globalConfig.testingMode&&(r.dataset.testId="success-label-".concat(e)),this.successLabels.push(r),r}},{key:"renderFieldLabel",value:function(e,t){var i,r,l,s,o,a,n;if("checkbox"===e.type||"radio"===e.type){var u=document.querySelector('label[for="'.concat(e.getAttribute("id"),'"]'));"label"===(null==(r=null==(i=e.parentElement)?void 0:i.tagName)?void 0:r.toLowerCase())?null==(s=null==(l=e.parentElement)?void 0:l.parentElement)||s.appendChild(t):u?null==(o=u.parentElement)||o.appendChild(t):null==(a=e.parentElement)||a.appendChild(t)}else null==(n=e.parentElement)||n.appendChild(t)}},{key:"renderErrors",value:function(){var l,s,e,t,i,r,o=this;if(this.isSubmitted){this.clearErrors(),this.isValid=!0;var a=function(e){var r=o.groupFields[e];if(r.isValid){r.elems.forEach(function(e){var t,i;Object.assign(e.style,(null==(t=r.config)?void 0:t.successFieldStyle)||o.globalConfig.successFieldStyle),e.classList.add((null==(i=r.config)?void 0:i.successFieldCssClass)||o.globalConfig.successFieldCssClass)});var t=o.createSuccessLabelElem(e,r.successMessage,r.config);return t&&r.groupElem.appendChild(t),"continue"}o.isValid=!1,r.elems.forEach(function(e){var t,i;Object.assign(e.style,(null==(t=r.config)?void 0:t.errorFieldStyle)||o.globalConfig.errorFieldStyle),e.classList.add((null==(i=r.config)?void 0:i.errorFieldCssClass)||o.globalConfig.errorFieldCssClass)});var i=o.createErrorLabelElem(e,r.errorMessage,r.config);r.groupElem.appendChild(i),o.isTooltip()&&o.tooltips.push(o.renderTooltip(r.groupElem,i,null==(s=null==(l=r.config)?void 0:l.tooltip)?void 0:s.position))};for(var n in this.groupFields)a(n);for(var u in this.fields){var c=this.fields[u];if(c.isValid){if(!c.asyncCheckPending){var d=this.createSuccessLabelElem(u,c.successMessage,c.config);d&&this.renderFieldLabel(c.elem,d),c.elem.classList.add((null==(e=c.config)?void 0:e.successFieldCssClass)||this.globalConfig.successFieldCssClass)}}else{this.isValid=!1,c.elem.classList.add((null==(t=c.config)?void 0:t.errorFieldCssClass)||this.globalConfig.errorFieldCssClass);var f=this.createErrorLabelElem(u,c.errorMessage,c.config);this.renderFieldLabel(c.elem,f),this.isTooltip()&&this.tooltips.push(this.renderTooltip(c.elem,f,null==(r=null==(i=c.config)?void 0:i.tooltip)?void 0:r.position))}}}}},{key:"destroy",value:function(){var t=this;this.eventListeners.forEach(function(e){t.removeListener(e.type,e.elem,e.func)}),Object.keys(this.customStyleTags).forEach(function(e){t.customStyleTags[e].remove()}),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}},{key:"refresh",value:function(){var t=this;this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach(function(e){t.addField(e,_toConsumableArray(t.fields[e].rules),t.fields[e].config)})):console.error("Cannot initialize the library! Form is not defined")}},{key:"setCurrentLocale",value:function(e){"string"==typeof e||void 0===e?(this.currentLocale=e,this.isSubmitted&&this.validate()):console.error("Current locale should be a string")}},{key:"onSuccess",value:function(e){return this.onSuccessCallback=e,this}},{key:"onFail",value:function(e){return this.onFailCallback=e,this}}]),r}()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,